#! /usr/bin/env python
import rosservice
import rospy
from reasoning_and_learning_framework_msgs.srv import *
from ralf import ralf

SERVICE_NAME = 'ralf'
NODE_NAME = 'ralf'

s = None


def get_grasping_type(req):

    answer = ralf.answer_query(req.question)


    # The MLN inference causes that the service dies sometimes without throwing an exception.
    # However until the real cause will be found out, a reboot of the service fixes it.
    if __is_service_running__():
        try:
            __start_service__()
        except:
            print''

    return GetAnswerResponse(answer)


def __is_service_running__():
    return '/{}'.format(SERVICE_NAME) not in rosservice.get_service_list()


def __start_service__():
    global s
    s = rospy.Service(SERVICE_NAME, GetAnswer, get_grasping_type)


def start_ralf_server():
    rospy.init_node(NODE_NAME)
    __start_service__()
    print "Waiting for questions"
    rospy.spin()
    

if __name__ == '__main__':
    start_ralf_server()




